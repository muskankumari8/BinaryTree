TOP VIEW class Solution {
    // Function to return a list of nodes visible from the top view
    // from left to right in Binary Tree.
    static class Info{
       Node node;
        int hd;
        Info(Node node,int hd)
        {
            this.node=node;
            this.hd=hd;
        }
    }
    static ArrayList<Integer> topView(Node root) {
        ArrayList<Integer> al=new ArrayList<>();
         Queue<Info> q=new LinkedList<>();
        HashMap<Integer,Node> map = new HashMap<>();
        
        int min =0;
        int max=0;
        if(root==null)
        {
            return al;
        }
        q.add(new Info(root,0));
        while(!q.isEmpty())
        {
                Info curr = q.remove();
                if(!map.containsKey(curr.hd))
                {
                    map.put(curr.hd,curr.node);
                }
                if(curr.node.left!=null)
                {
                    q.add(new Info(curr.node.left,curr.hd-1));
                    min=Math.min(curr.hd-1,min);
                }
                if(curr.node.right!=null)
                {
                    q.add(new Info(curr.node.right,curr.hd+1));
                    max=Math.max(max,curr.hd+1);
                }
        }
        for(int i=min;i<=max;i++)
        {
            al.add(map.get(i).data);
        }
        return al;
    }
}
